# args =>
# m (total parcel requested)
# group (list contains the number of eggs in the parcel that can be generated by each group)
def findNumberofPossibleX(m, group):
    # NAIF SOLUTION

    # possibility = 0
    # trial = 0
    # for i in range(m):
    #     while (trial // group[0]) == i:
    #         if sum([(trial // item) for item in group]) == m:
    #             print("nilai trial yang memenuhi ", trial)
    #             possibility += 1
    #         trial += 1
    # return possibility

    # DIVIDE AND CONQUER SOLUTION

    lower = 0
    upper = 0

    # find lower bound
    left = 1
    right = pow(2, 60)
    while left <= right:
        mid = (left + right) // 2

        # print("mid ", mid)

        cum = sum([(mid // item) for item in group])
        if cum < m:
            left = mid + 1
        elif cum > m:
            right = mid - 1
        else:
            lower = mid
            right = mid - 1

        # print("left ", left)
        # print("right ", right)
        # print("lower ", lower)

    # find upper bound
    left = 1
    right = pow(2, 60)
    while left <= right:
        mid = (left + right) // 2
        cum = sum([(mid // item) for item in group])
        if cum < m:
            left = mid + 1
        elif cum > m:
            right = mid - 1
        else:
            upper = mid
            left = mid + 1
    if lower == 0:
        return 0
    return (upper - lower) + 1


if __name__ == "__main__":
    # N adalah banyak kelompok
    # M adalah total parsel yang dipesan pelanggan
    N, M = map(int, input().split())
    # list berisi banyak telur pada parsel yang dihasilkan oleh setiap kelompok
    group = list(map(int, input().split()))
    res = findNumberofPossibleX(M, group)
    print(res)
